/*======================================================================
AltibaseStatement  implements a wrapped DB/2 Statement.
Version     : $Id: $
Application : SIARD2
Description : AltibaseStatement implements a wrapped Altibase Statement.
Platform    : Java 7
------------------------------------------------------------------------
Copyright  : 2016, Enter AG, RÃ¼ti ZH, Switzerland
Created    : 04.11.2016, Hartwig Thomas
======================================================================*/
package ch.admin.bar.siard2.jdbc;

import java.sql.*;
import ch.enterag.utils.jdbc.*;

public class AltibaseStatement extends BaseStatement implements Statement
{
	private AltibaseConnection _conn = null;
	/*------------------------------------------------------------------*/
	/** constructor
	 * @param stmtWrapped statement to be wrapped.
	 */
	public AltibaseStatement(Statement stmtWrapped, AltibaseConnection conn) throws SQLException
	{
		super(stmtWrapped);
		_conn = conn;
	} /* constructor */

	/*------------------------------------------------------------------*/
	/** {@inheritDoc}
	 * Return AltibaseConnection.
	 */
	@Override
	public Connection getConnection() throws SQLException
	{
		Connection conn = new AltibaseConnection(super.getConnection());
		return conn;
	} /* getConnection */

	/*------------------------------------------------------------------*/
	/** {@inheritDoc}
	 * Return AltibaseResultSet
	 */
	@Override
	public ResultSet executeQuery(String sql) throws SQLException
	{
		ResultSet rs = null;
		rs = new AltibaseResultSet(super.executeQuery(getConnection().nativeSQL(sql)), _conn);
		return rs;
	} /* executeQuery */

	/*------------------------------------------------------------------*/
	/** {@inheritDoc}
	 */
	@Override
	public int executeUpdate(String sql) throws SQLException
	{
		String sSql = getConnection().nativeSQL(sql);
		int iResult = super.executeUpdate(sSql);
		return iResult;
	} /* executeUpdate */

	/*------------------------------------------------------------------*/
	/** {@inheritDoc}
	 */
	@Override
	public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException
	{
		String sSql = getConnection().nativeSQL(sql);
		int iResult = super.executeUpdate(sSql, autoGeneratedKeys);
		return iResult;
	} /* executeUpdate */

	/*------------------------------------------------------------------*/
	/** {@inheritDoc}
	 */
	@Override
	public int executeUpdate(String sql, int[] columnIndexes) throws SQLException
	{
		String sSql = getConnection().nativeSQL(sql);
		int iResult = super.executeUpdate(sSql, columnIndexes);
		return iResult;
	} /* executeUpdate */

	/*------------------------------------------------------------------*/
	/** {@inheritDoc}
	 */
	@Override
	public int executeUpdate(String sql, String[] columnNames) throws SQLException
	{
		String sSql = getConnection().nativeSQL(sql);
		int iResult = super.executeUpdate(sSql, columnNames);
		return iResult;
	} /* executeUpdate */

} /* AltibaseStatement */
